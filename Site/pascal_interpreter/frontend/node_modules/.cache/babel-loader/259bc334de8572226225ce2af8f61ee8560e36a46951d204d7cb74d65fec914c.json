{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<nav><div class=\\\"sidebar\\\"><div class=\\\"slideshow\\\"><img class=\\\"slide\\\" src=\\\"image1.jpg\\\" alt=\\\"Slide 1\\\"><img class=\\\"slide\\\" src=\\\"image2.jpg\\\" alt=\\\"Slide 2\\\"><img class=\\\"slide\\\" src=\\\"image3.jpg\\\" alt=\\\"Slide 3\\\"></div><p>Choose a theme:</p><a href=\\\"?theme=vue\\\" class=\\\"theme-link\\\">Vue</a><a href=\\\"?theme=bubble\\\" class=\\\"theme-link\\\">Bubble</a><a href=\\\"?theme=dark\\\" class=\\\"theme-link\\\">Dark</a><a href=\\\"?theme=pure\\\" class=\\\"theme-link\\\">Pure</a></div></nav>\", 1);\nconst _hoisted_2 = {\n  id: \"app\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Pascal Interpreter\", -1);\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Output:\", -1);\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Error:\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Sidebar = _resolveComponent(\"Sidebar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Sidebar, {\n    onItemClick: $options.handleSidebarItemClick\n  }, null, 8, [\"onItemClick\"]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.code = $event),\n    placeholder: \"Enter your Pascal code here...\"\n  }, null, 512), [[_vModelText, $data.code]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.interpretCode && $options.interpretCode(...args))\n  }, \"Interpret\"), $data.output !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"pre\", null, _toDisplayString($data.output), 1)])) : _createCommentVNode(\"\", true), $data.error !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"pre\", null, _toDisplayString($data.error), 1)])) : _createCommentVNode(\"\", true)])])]);\n}","map":{"version":3,"names":["_createStaticVNode","id","class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_Sidebar","onItemClick","$options","handleSidebarItemClick","_hoisted_3","_hoisted_4","_cache","$event","$data","code","placeholder","onClick","args","interpretCode","output","_hoisted_5","_hoisted_6","_toDisplayString","_createCommentVNode","error","_hoisted_7","_hoisted_8"],"sources":["/Users/pedro/Sites/ghpage/markdown-blog/pascal_interpreter/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <nav>\n      <div class=\"sidebar\">\n        <div class=\"slideshow\">\n          <img class=\"slide\" src=\"image1.jpg\" alt=\"Slide 1\">\n          <img class=\"slide\" src=\"image2.jpg\" alt=\"Slide 2\">\n          <img class=\"slide\" src=\"image3.jpg\" alt=\"Slide 3\">\n        </div>\n        <p>Choose a theme:</p>\n        <a href=\"?theme=vue\" class=\"theme-link\">Vue</a>\n        <a href=\"?theme=bubble\" class=\"theme-link\">Bubble</a>\n        <a href=\"?theme=dark\" class=\"theme-link\">Dark</a>\n        <a href=\"?theme=pure\" class=\"theme-link\">Pure</a>\n      </div>\n    </nav>\n    <div id=\"app\">\n      <Sidebar @item-click=\"handleSidebarItemClick\"></Sidebar>\n      <div class=\"content\">\n        <h1>Pascal Interpreter</h1>\n        <textarea v-model=\"code\" placeholder=\"Enter your Pascal code here...\"></textarea>\n        <button @click=\"interpretCode\">Interpret</button>\n        <div v-if=\"output !== null\">\n          <h2>Output:</h2>\n          <pre>{{ output }}</pre>\n        </div>\n        <div v-if=\"error !== null\">\n          <h2>Error:</h2>\n          <pre>{{ error }}</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Sidebar from './components/Sidebar.vue';\n// Import other components if used\n\nexport default {\n  components: {\n    Sidebar\n    // Include other components if used\n  },\n  data() {\n    return {\n      code: '',\n      output: null,\n      error: null\n    };\n  },\n  methods: {\n    interpretCode() {\n      axios.post('http://localhost/path/to/your/backend/index.php', { code: this.code })\n        .then(response => {\n          if (response.data.output) {\n            this.output = response.data.output;\n            this.error = null;\n          } else {\n            this.output = null;\n            this.error = response.data.error;\n          }\n        })\n        .catch(error => {\n          console.error('Error interpreting Pascal code:', error);\n          this.output = null;\n          this.error = 'An error occurred while interpreting the Pascal code.';\n        });\n    },\n    handleSidebarItemClick(item) {\n      console.log('Clicked:', item);\n      // You can perform navigation or other actions based on the clicked item\n    }\n  }\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n/* These styles will affect elements globally */\n\nnav {\n  /* Add any styling for the <nav> element */\n}\n\n.sidebar {\n  /* Add styling for the sidebar */\n}\n\n.slideshow {\n  /* Add styling for the slideshow */\n}\n\n.slide {\n  /* Add styling for the slides */\n}\n\n.theme-link {\n  /* Add styling for theme links */\n}\n\n#app {\n  display: flex;\n  height: 100vh;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n}\n\ntextarea {\n  width: 100%;\n  height: 200px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\nh2 {\n  margin-top: 20px;\n}\n\npre {\n  background-color: #f8f9fa;\n  padding: 10px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";gCAAAA,kBAAA;;EAgBSC,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAS;gCAClBC,mBAAA,CAA2B,YAAvB,oBAAkB;;EAnB9BC,GAAA;AAAA;gCAuBUD,mBAAA,CAAgB,YAAZ,SAAO;;EAvBrBC,GAAA;AAAA;gCA2BUD,mBAAA,CAAe,YAAX,QAAM;;;uBA1BlBE,mBAAA,CA+BM,cA9BJC,UAaM,EACNH,mBAAA,CAeM,OAfNI,UAeM,GAdJC,YAAA,CAAwDC,kBAAA;IAA9CC,WAAU,EAAEC,QAAA,CAAAC;EAAsB,8BAC5CT,mBAAA,CAYM,OAZNU,UAYM,GAXJC,UAA2B,E,gBAC3BX,mBAAA,CAAiF;IApBzF,uBAAAY,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoB2BC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;gCAAlBF,KAAA,CAAAC,IAAI,E,GACvBf,mBAAA,CAAiD;IAAxCiB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEV,QAAA,CAAAW,aAAA,IAAAX,QAAA,CAAAW,aAAA,IAAAD,IAAA,CAAa;KAAE,WAAS,GAC7BJ,KAAA,CAAAM,MAAM,a,cAAjBlB,mBAAA,CAGM,OAzBdmB,UAAA,GAuBUC,UAAgB,EAChBtB,mBAAA,CAAuB,aAAAuB,gBAAA,CAAfT,KAAA,CAAAM,MAAM,M,KAxBxBI,mBAAA,YA0BmBV,KAAA,CAAAW,KAAK,a,cAAhBvB,mBAAA,CAGM,OA7BdwB,UAAA,GA2BUC,UAAe,EACf3B,mBAAA,CAAsB,aAAAuB,gBAAA,CAAdT,KAAA,CAAAW,KAAK,M,KA5BvBD,mBAAA,W"},"metadata":{},"sourceType":"module","externalDependencies":[]}